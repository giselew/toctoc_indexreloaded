plugin.tx_toctoc_indexreloaded_pi1 {
	# cat=tx_toctoc_indexreloaded_pi1 //002; type=boolean; label=Dont modify index.php at all
	dontmod = 1

	# cat=tx_toctoc_indexreloaded_pi1 //003; type=boolean; label=Dont modify JS-files
	dontmodJS = 0

	# cat=tx_toctoc_indexreloaded_pi1 //004; type=boolean; label=Dont modify CSS-files
	dontmodCSS = 0

	# cat=tx_toctoc_indexreloaded_pi1 //005; type=string; label=Exclude list: parts of JS or CSS-filenames, that should be excluded when dontmod=0, dontmodjs=0 or/and dontmodcss=0 for inline scripts/styles a part of the text is ok for identification
	excludesarr = css/print.css, addthis_config

	# cat=tx_toctoc_indexreloaded_pi1 //006; type=string; label=Include list: parts of JS or CSS-filenames, that must be included when dontmod=0, dontmodjs=0 or/and dontmodcss=0. includes overwrite the excludes. This good for more detailed filtering
	includesarr = 

	# cat=tx_toctoc_indexreloaded_pi1 //007; type=boolean; label=Force creation of new files: You can force new files (CSS and JS) with URL-Parameter ?forceNewFiles=1 as well
	forceNewFiles = 0

	# cat=tx_toctoc_indexreloaded_pi1 //008; type=boolean; label=in production mode URL-Parameters ?forceNewFiles=1, ?dontModIndex=1 and ?showDebugWindow =1 are disabled
	productionMode = 0

	# cat=tx_toctoc_indexreloaded_pi1 //009; type=string; label=Deactivate on pages: List of pages that should not be touched by toctoc_indexreloaded
	deactivateOnPages = 

	# cat=tx_toctoc_indexreloaded_pi1 //101; type=boolean; label=Enable file processing
	optProcessfiles = 1

	# cat=tx_toctoc_indexreloaded_pi1 //102; type=boolean; label=Enable JS-file processing
	optProcessjsfiles = 1

	# cat=tx_toctoc_indexreloaded_pi1 //103; type=boolean; label=Load last JS file asynchronous. Must be set to 0 when code in last JS file attemps to make document.write
	asynchLastJS = 1
	
	# cat=tx_toctoc_indexreloaded_pi1 //104; type=boolean; label=Enable CSS-file processing
	optProcesscssfiles = 1

	# cat=tx_toctoc_indexreloaded_pi1 //105; type=string; label=Exclude list for Processing: parts of JS or CSS-filenames, that should be excluded for processing, for inline scripts/styles a part of the text is ok for identification
	excludesProcessing = var pageid =, tx-tc-shrrr-

	# cat=tx_toctoc_indexreloaded_pi1 //106; type=string; label=Include list for Processing: parts of JS or CSS-filenames, that must be included for processing anyway. includes overwrite the excludes. This good for more detailed filtering
	includesProcessing = 
	
	# cat=tx_toctoc_indexreloaded_pi1 //107; type=string; label=Path to processed files: CSS and JS files will be written in this directory
	typo3tempsubfolder = typo3temp/TocTocIndexReloaded

	# cat=tx_toctoc_indexreloaded_pi1 //201; type=boolean; label=CSS will be compressed	
	doCrunchCSS = 1

	# cat=tx_toctoc_indexreloaded_pi1 //203; type=boolean; label=Enable minify of JS-files with JSMin.php - modified PHP implementation of Douglas Crockford's JSMin
	optMinifyjsfiles = 1

	# cat=tx_toctoc_indexreloaded_pi1 //204; type=string; label=Exclude list: parts of JS-filenames, that must not be minified
	noMinifyjsList =

	# cat=tx_toctoc_indexreloaded_pi1 //301; type=boolean; label=Split CSS into CSS above the fold and CSS below the fold (requires APIKey)
	generateCSSbelowTheFold = 0

	# cat=tx_toctoc_indexreloaded_pi1 //302; type=string; label=The tags in this list always remain in the CSS above the fold
	tagsToKeepAboveTheFold = code, i, b, blockquote

	# cat=tx_toctoc_indexreloaded_pi1 //303; type=string; label=The class names in this list always remain in the CSS above the fold
	classesToKeepAboveTheFold = tx-tc-login-form-iframe,tx-tc-login-form-iframe-forgotpw
	
	# cat=tx_toctoc_indexreloaded_pi1 //303; type=string; label=The CSS-Ids in this list always remain in the CSS above the fold
	IDsToKeepAboveTheFold = 

	# cat=tx_toctoc_indexreloaded_pi1 //304; type=boolean; label=When generateCSSbelowTheFold = 1, then merge new CSS into existing CSS (above and below the fold)
	mergeCSSbelowTheFold = 0
	
	# cat=tx_toctoc_indexreloaded_pi1 //305; type=boolean; label=When mergeCSSbelowTheFold = 1, after many calculations of above- and below-CSS then normally the merged output becomes stable. Avoid recalculations by setting this option to 1
	freezeFolding = 0
	
	# cat=tx_toctoc_indexreloaded_pi1 //306; type=boolean; label=Also, when mergeCSSbelowTheFold = 1, above-the-fold CSS is stored in files and loaded as file links. Alternatively you can force this CSS to be loaded inline into the HTML of the page
	inlineCSSaboveTheFold = 0
	
	# cat=tx_toctoc_indexreloaded_pi1 //306; type=boolean; label=And again, when mergeCSSbelowTheFold = 1, then check CSS for duplicates (same rule, same selector) and eliminate them in CSS-output. 
	checkDupesOnFoldingMerge = 0
	
	# cat=tx_toctoc_indexreloaded_pi1 //901; type=boolean; label=Show the debug window by default: You can force the debug window with URL-Parameter ?showDebugWindow=1 as well. SYS.devIPmask must match your IP.
	showDebugWindow = 0

	# cat=tx_toctoc_indexreloaded_pi1 //902; type=string; label=The html of the debug windows is appended to this tag
	showDebugWindowBodyTag = <body>

	# cat=tx_toctoc_indexreloaded_pi1 //903; type=boolean; label=Show options used in the debug window
	showOptionsInDebugWindow = 0
	
	# cat=tx_toctoc_indexreloaded_pi1 //904; type=boolean; label=Create a little report on activities during creation of above/below the fold-CSS in the debug window
	CSSFoldingReport = 0	
}